Step 1: Create 4 users. Galen, Mohit, Akash, Prince.
Have their name, email in metadata
q: can we create user with same name and email id with different id?

Step 2:
@Validated
duplicate in request body
merge intervals case?
Galen will set up his availability slots from 4pm(16:00) to 11pm(23:00) every day
Mohit will set his availability slots from 9am(09:00) to 5pm(17:00) every day except Saturday, Sunday

Step 3:
date in input should be greater than current date
@validated
date format supported is yyyy-MM-dd
Call get free slots for Galen for a particular day. You should get slots as per above setting.
Similarly for Mohit. No booking has been done by any invitee till now.

Step 4:
Now Akash and Prince are preparing for interviews. And apply to Accolade. Both are invitees.
Scenario 1: Both do booking of different slot
Scenario 2: Both do booking of same slot but for different owner.
Scenario 3: Both do booking of same slot for same owner.
[9:43 AM, 8/3/2025] Akashdeep Singh: Scenario 1:
[9:44 AM, 8/3/2025] Akashdeep Singh: Akash does booking for Galen for Saturday 4pm. He should be able to do booking successful.
[9:46 AM, 8/3/2025] Akashdeep Singh: Prince also wants to book time with Galen. When he will call get Available slots api for Galen owner, he should get Saturday 4pm-5pm as BOOKED.
Let's say he does booking from 5pm-6pm. He should be able to do booking successfully.
[9:47 AM, 8/3/2025] Akashdeep Singh: Now Galen calls get upcoming appointments api. He should be able to get Akash and Prince's upcoming appointments in response. Along with details like name, email etc.
[9:49 AM, 8/3/2025] Akashdeep Singh: Scenario 2 same as Scenario 1
[9:49 AM, 8/3/2025] Akashdeep Singh: Scenario 3:
[9:51 AM, 8/3/2025] Akashdeep Singh: On a side note, there should also be a provision that if appointment date has passed, we should remove appointment from hashmap. How we can do that?
Using cron or background thread
[9:54 AM, 8/3/2025] Akashdeep Singh: Akash and Prince call get available slots api for Mohit owner at same time for Round 2. Both get 1pm to 8pm slots free for Monday to Friday. Both do booking for 5pm-6pm slot on Thursday at same time.
Expectation is one booking should succeeded and other should fail.
[9:55 AM, 8/3/2025] Akashdeep Singh: The invitee whose booking failed now calls get available slots api for Mohit owner. He should see 5pm-6pm slot as BOOKED. He will now select another slot like 7pm-8pm and call book api to do booking. He should be able to do the booking.
[9:56 AM, 8/3/2025] Akashdeep Singh: Now mohit calls upcoming appointments api and sees 2 appointments on Thursday (date also). One for Thursday 5pm-6pm and second for Thursday 7pm-8pm



Step 1:
Create 4 users. Galen, Mohit, Akash, Prince.
Have their name, email in metadata

curl --location --request PUT 'http://localhost:8080/users/1' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data-raw '{
    "name": "Galen",
    "email": "gsimmons@dealmerridion.com"
}'

curl --location --request PUT 'http://localhost:8080/users/2' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data-raw '{
    "name": "Mohit",
    "email": "maggarwal@dealmerridion.com"
}'

curl --location --request PUT 'http://localhost:8080/users/3' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data-raw '{
    "name": "Akash",
    "email": "asingh@gmail.com"
}'

curl --location --request PUT 'http://localhost:8080/users/4' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data-raw '{
    "name": "Prince",
    "email": "pkumar@gmail.com"
}'
Response: 200 OK(in each of above case)
{
    "success": true,
    "message": "User set successfully."
}


Step 2:
Galen will set up his availability slots from 4pm(16:00) to 11pm(23:00) every day

curl --location --request PUT 'http://localhost:8080/availability/setup' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data '{
  "ownerId": "1",
  "rules": [
    {
      "dayOfWeek": "MONDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "TUESDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "WEDNESDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "THURSDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "FRIDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "SATURDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "SUNDAY",
      "startTime": "16:00",
      "endTime": "23:00",
      "ruleType": "AVAILABLE"
    }
  ]
}'

Response 200 OK:
{
    "success": true,
    "message": "Availability rules set successfully"
}

Mohit will set his availability slots from 9am(09:00) to 5pm(17:00) every day except Saturday, Sunday

curl --location --request PUT 'http://localhost:8080/availability/setup' \
--header 'Content-Type: application/json' \
--header 'Cookie: JSESSIONID=D768B0EA8A86FAB4D0E43246C6AF8B3E' \
--data '{
  "ownerId": "2",
  "rules": [
    {
      "dayOfWeek": "MONDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "TUESDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "WEDNESDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "THURSDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "FRIDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "AVAILABLE"
    },
    {
      "dayOfWeek": "SATURDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "UNAVAILABLE"
    },
    {
      "dayOfWeek": "SUNDAY",
      "startTime": "09:00",
      "endTime": "17:00",
      "ruleType": "UNAVAILABLE"
    }
  ]
}'

Response 200 OK:
{
    "success": true,
    "message": "Availability rules set successfully"
}


Step 3:
Call get free slots for Galen for a particular day. You should get slots as per above setting.
Similarly for Mohit. No booking has been done by any invitee till now.


Scenario 1:

